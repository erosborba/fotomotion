// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  payments  Payment[]
  images    Image[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("users")
}

model Payment {
  id            String    @id @default(cuid())
  sessionId     String    @unique
  customerId    String
  amount        Int
  status        PaymentStatus
  // Alterado: Uma imagem pode ter apenas um pagamento
  image         Image?    @relation(fields: [imageId], references: [id])
  imageId       String?   @unique  // Adicionado @unique aqui
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  errorMessage  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("payments")
}

model Image {
  id          String    @id @default(cuid())
  originalUrl String
  processedUrl String?
  status      ProcessingStatus
  payment     Payment?  // Relação inversa
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("images")
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum ProcessingStatus {
  WAITING_PAYMENT
  PROCESSING
  COMPLETED
  FAILED
}